# 服务器配置
server:
  # API服务器配置
  api:
    address: ":8080"
    name: "API服务器"
    
  # 后台管理服务器配置
  admin:
    address: ":8081"
    name: "后台管理服务器"
    
  # 静态资源服务器配置
  source:
    address: ":8082"
    serverRoot: "public"  # 统一的静态资源目录
    name: "静态资源服务器"
  
database:
  # 默认配置组
  default:
    # 数据库类型：mysql, postgres, sqlite, mssql
    type: mysql
    
    # 数据库连接信息（敏感信息使用环境变量）
    host: ${DB_HOST:127.0.0.1}
    port: ${DB_PORT:3306}
    user: ${DB_USER:root}
    pass: ${DB_PASS:root}
    name: ${DB_NAME:template_chat}
    
    # 字符集
    charset: utf8mb4
    
    # 表前缀（可选）
    prefix: ls_
    
    # 是否开启调试模式（会打印 SQL）
    debug: true
    
    # 连接池配置
    linkInfo: "${DB_USER:root}:${DB_PASS:root}@tcp(${DB_HOST:127.0.0.1}:${DB_PORT:3306})/${DB_NAME:template_chat}?charset=utf8mb4"
    connMaxIdle: 10
    connMaxOpen: 100
    connMaxLifetime: 300
    
# Redis配置
redis:
  default:
    address: "${REDIS_ADDR:127.0.0.1:6379}"
    db: ${REDIS_DB:0}
    password: "${REDIS_PASSWORD:}"
    
# 日志配置
logs:
  # 日志等级(-1:Debug, 0:Info, 1:Warn, 2:Error, 3:DPanic, 4:Panic, 5:Fatal, -1<=level<=5, 参照zap.level源码)
  level: -1
  # 日志路径
  path: logs
  # 文件最大大小, M
  max-size: 50
  # 备份数
  max-backups: 100
  # 存放时间, 天
  max-age: 30
  # 是否压缩
  compress: false
  
# JWT配置
jwt:
  secret: "${JWT_SECRET:go-web-template-secret-key}"
  expire: 86400  # 24小时

# API配置（参考go-novel的API加密配置）
api:
  encrypt: false  # 是否启用响应加密
  aesKey: "${API_AES_KEY:go-web-template-aes-key}"  # AES加密密钥

# OSS配置
oss:
  accessKeyId: "${OSS_ACCESS_KEY_ID}"
  accessKeySecret: "${OSS_ACCESS_KEY_SECRET}"
  roleArn: "${OSS_ROLE_ARN}"
  bucket: "${OSS_BUCKET}"
  endpoint: "${OSS_ENDPOINT}"
  viewDomain: "${OSS_VIEW_DOMAIN}"
  tokenExpireTime: ${OSS_TOKEN_EXPIRE_TIME:900}  # STS Token过期时间（秒）
  policyFile: "${OSS_POLICY_FILE:/policy/bucket_write_policy.txt}"  # OSS权限策略文件路径

# AI聊天服务配置
aichat:
  # API认证配置
  skToken: "${AICHAT_SK_TOKEN}"  # SK Token（Base64编码）从环境变量读取

